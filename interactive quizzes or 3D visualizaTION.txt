interactive quizzes or 3D visualizations

import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { motion } from "framer-motion";
import { Progress } from "@/components/ui/progress";

export default function StemSimulation() {
  const [section, setSection] = useState(0);
  const [quizActive, setQuizActive] = useState(false);
  const [quizAnswer, setQuizAnswer] = useState(null);

  const sections = [
    {
      title: "Physics - Newton’s Laws",
      content:
        "Explore Newton’s Laws with an interactive animation of forces in motion! Click to launch a virtual rocket and observe the effects.",
      quiz: {
        question: "Which law explains why a rocket moves forward when fuel is ejected backward?",
        options: ["Newton’s First Law", "Newton’s Second Law", "Newton’s Third Law"],
        answer: "Newton’s Third Law",
      },
    },
    {
      title: "Chemistry - Safe Reactions",
      content:
        "Mix virtual chemicals and watch safe reactions unfold! Learn about catalysts and reaction speeds.",
      quiz: {
        question: "What speeds up a chemical reaction without being consumed?",
        options: ["Solvent", "Reactant", "Catalyst"],
        answer: "Catalyst",
      },
    },
    {
      title: "Technology - Coding Basics",
      content:
        "Try simple block coding! Drag and drop elements to see how programming logic works.",
      quiz: {
        question: "Which language is commonly used for web development?",
        options: ["Python", "JavaScript", "C++"],
        answer: "JavaScript",
      },
    },
    {
      title: "Engineering - Bridge Building",
      content:
        "Design and test a virtual bridge! Adjust structures and materials to see if it holds under weight.",
      quiz: {
        question: "Which shape provides the strongest support in bridge construction?",
        options: ["Rectangle", "Triangle", "Circle"],
        answer: "Triangle",
      },
    },
    {
      title: "STEM Careers Exploration",
      content:
        "Choose a STEM career and see how science, technology, engineering, and math play a role in real-world jobs.",
      quiz: null,
    },
  ];

  const handleQuizSubmit = (option) => {
    setQuizAnswer(option === sections[section].quiz.answer ? "Correct!" : "Try Again.");
  };

  return (
    <div className="p-8 max-w-2xl mx-auto text-center">
      <Card className="p-4 shadow-lg bg-white rounded-2xl">
        <CardContent>
          <motion.h2
            key={section}
            initial={{ opacity: 0, y: -10 }}
            animate={{ opacity: 1, y: 0 }}
            className="text-2xl font-bold mb-4"
          >
            {sections[section].title}
          </motion.h2>
          <motion.p
            key={section + "content"}
            initial={{ opacity: 0, x: -10 }}
            animate={{ opacity: 1, x: 0 }}
            className="text-lg mb-6"
          >
            {sections[section].content}
          </motion.p>
          <Progress value={(section / (sections.length - 1)) * 100} className="mb-4" />
          {sections[section].quiz && !quizActive && (
            <Button onClick={() => setQuizActive(true)} className="bg-green-500 hover:bg-green-700 text-white px-4 py-2 rounded">
              Take Quiz
            </Button>
          )}
          {quizActive && sections[section].quiz && (
            <div className="mt-4">
              <p className="font-semibold">{sections[section].quiz.question}</p>
              {sections[section].quiz.options.map((option, index) => (
                <Button
                  key={index}
                  onClick={() => handleQuizSubmit(option)}
                  className="block bg-gray-200 hover:bg-gray-300 text-black px-4 py-2 mt-2 rounded"
                >
                  {option}
                </Button>
              ))}
              {quizAnswer && <p className="mt-2 font-bold">{quizAnswer}</p>}
            </div>
          )}
          <Button
            onClick={() => {
              setQuizActive(false);
              setQuizAnswer(null);
              setSection((prev) => (prev + 1) % sections.length);
            }}
            className="bg-blue-500 hover:bg-blue-700 text-white px-4 py-2 rounded mt-4"
          >
            Next Section
          </Button>
        </CardContent>
      </Card>
    </div>
  );
}
